<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.financia.business.dataconfiguration.mapper.ExCurrencyMapper">

    <resultMap type="com.financia.business.ExCurrency" id="ExCurrencyResult">
        <result property="id"    column="id"    />
        <result property="pair_name"    column="pairName"    />
        <result property="pair"    column="pair"    />
        <result property="symbol"    column="symbol"    />
        <result property="status"    column="status"    />
        <result property="sort"    column="sort"    />
        <result property="imgurl"    column="imgurl"    />
        <result property="updateTime"    column="update_time"    />

        <result property="popular"    column="popular"    />
        <result property="visible"    column="visible"    />
        <result property="active"    column="active"    />

    </resultMap>

    <sql id="selectExCurrencyVo">
        select id, pair, symbol, status, sort,imgurl,update_time,pair_name,popular,visible,active from ex_currency
    </sql>

    <select id="selectExCurrencyList" parameterType="com.financia.business.ExCurrency" resultMap="ExCurrencyResult">
        <include refid="selectExCurrencyVo"/>
        <where>
            <if test="pair != null  and pair != ''"> and pair like concat('%', #{pair}, '%')</if>
            <if test="symbol != null  and symbol != ''"> and symbol = #{symbol}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="imgurl != null "> and imgurl = #{imgurl}</if>

            <if test="popular != null "> and popular = #{popular}</if>
            <if test="visible != null "> and visible = #{visible}</if>
            <if test="active != null "> and active = #{active}</if>
        </where>
        order by sort asc
    </select>

    <select id="selectExCurrencyById" parameterType="Long" resultMap="ExCurrencyResult">
        <include refid="selectExCurrencyVo"/>
        where id = #{id}
    </select>

    <insert id="insertExCurrency" parameterType="com.financia.business.ExCurrency" useGeneratedKeys="true" keyProperty="id">
        insert into ex_currency
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pair != null">pair,</if>
            <if test="symbol != null">symbol,</if>
            <if test="status != null">status,</if>
            <if test="sort != null">sort,</if>
            <if test="imgurl != null">imgurl,</if>

            <if test="popular != null ">  popular,</if>
            <if test="visible != null ">  visible,</if>
            <if test="active != null ">  active,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pair != null">#{pair},</if>
            <if test="symbol != null">#{symbol},</if>
            <if test="status != null">#{status},</if>
            <if test="sort != null">#{sort},</if>
            <if test="imgurl != null">#{imgurl},</if>

            <if test="popular != null ">  #{popular},</if>
            <if test="visible != null ">  #{visible},</if>
            <if test="active != null ">  #{active},</if>
         </trim>
    </insert>

    <update id="updateExCurrency" parameterType="com.financia.business.ExCurrency">
        update ex_currency
        <trim prefix="SET" suffixOverrides=",">
            <if test="pair != null">pair = #{pair},</if>
            <if test="symbol != null">symbol = #{symbol},</if>
            <if test="status != null">status = #{status},</if>
            <if test="sort != null">sort = #{sort},</if>
            <if test="imgurl != null">imgurl = #{imgurl},</if>
            <if test="popular != null ">  popular = #{popular},</if>
            <if test="visible != null ">  visible = #{visible},</if>
            <if test="active != null ">  active = #{active},</if>
            update_time = date_format(now(),'%Y-%m-%d %H:%i:%s')
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteExCurrencyById" parameterType="Long">
        delete from ex_currency where id = #{id}
    </delete>

    <delete id="deleteExCurrencyByIds" parameterType="String">
        delete from ex_currency where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
