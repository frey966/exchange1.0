<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.financia.business.dataconfiguration.mapper.PBusinessTypeMapper">
    
    <resultMap type="com.financia.business.PBusinessType" id="PBusinessTypeResult">
        <result property="id"    column="id"    />
        <result property="businessType"    column="business_type"    />
        <result property="businessName"    column="business_name"    />
        <result property="status"    column="status"    />
        <result property="active"    column="active"    />
        <result property="content"    column="content"    />
    </resultMap>

    <sql id="selectPBusinessTypeVo">
        select id, business_type, business_name, status, active, create_time,content from p_business_type
    </sql>

    <select id="selectPBusinessTypeList" parameterType="com.financia.business.PBusinessType" resultMap="PBusinessTypeResult">
        <include refid="selectPBusinessTypeVo"/>
        <where>  
            <if test="businessType != null "> and business_type = #{businessType}</if>
            <if test="businessName != null  and businessName != ''"> and business_name like concat('%', #{businessName}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="active != null  and active != ''"> and active = #{active}</if>
        </where>
    </select>
    
    <select id="selectPBusinessTypeById" parameterType="Long" resultMap="PBusinessTypeResult">
        <include refid="selectPBusinessTypeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertPBusinessType" parameterType="com.financia.business.PBusinessType" useGeneratedKeys="true" keyProperty="id">
        insert into p_business_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="businessType != null">business_type,</if>
            <if test="businessName != null">business_name,</if>
            <if test="status != null">status,</if>
            <if test="active != null and active != ''">active,</if>
            <if test="content != null and content != ''">content,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="businessType != null">#{businessType},</if>
            <if test="businessName != null">#{businessName},</if>
            <if test="status != null">#{status},</if>
            <if test="active != null and active != ''">#{active},</if>
            <if test="content != null and content != ''">#{content},</if>
         </trim>
    </insert>

    <update id="updatePBusinessType" parameterType="com.financia.business.PBusinessType">
        update p_business_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="businessType != null">business_type = #{businessType},</if>
            <if test="businessName != null">business_name = #{businessName},</if>
            <if test="status != null">status = #{status},</if>
            <if test="active != null and active != ''">active = #{active},</if>
            <if test="content != null and content != ''">content = #{content},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePBusinessTypeById" parameterType="Long">
        delete from p_business_type where id = #{id}
    </delete>

    <delete id="deletePBusinessTypeByIds" parameterType="String">
        delete from p_business_type where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>